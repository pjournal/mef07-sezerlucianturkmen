---
title: "In Class 1"
author: "Sezer Turkmen"
date: "`r format(Sys.time(), '%d %B %Y')`"
output: 
  html_document:
editor: visual
---

### Most Streamed Spotify Songs 2023

The 'Most Streamed Spotify Songs 2023' dataset is a fantastic choice for class demos. It offers insights into the music industry by showcasing popular songs and their attributes. Students can explore the science of hit songs, understand their impact through social media analysis, and learn about cross-platform music data. It's engaging and up-to-date, making it an excellent teaching resource.

```{r include=FALSE}

library(tidyverse)
library(googledrive)
library(dplyr)
library(readr)
library(ggplot2)
library(DT)
 
```

```{r most_streamed_spotify_song_2023, include=TRUE}
# Use Google Drive to connect Dataset with library of 'googleDrive'
id <- "1nM0Cr-gVFF9UjvxSZXHNfFnrDWIUoTHi"
total_list <- read.csv(sprintf("https://docs.google.com/uc?id=%s&export=download", id))

# Filter out rows with non-numeric values in the 'streams' column
filtered_spotify_data <- total_list %>%
   filter(!grepl("[a-zA-Z]", streams))

# Sort the filtered dataset by the 'streams' column in descending order
sorted_filtered_spotify_data <- filtered_spotify_data %>%
  arrange(desc(streams))

# Create HTML view of Dataset
DT::datatable(head(sorted_filtered_spotify_data), editable = list(
  target = 'row', disable = list(columns = c(1, 3, 4))
))
 
```

```{r  include=TRUE}


class(filtered_spotify_data$streams)
# Convert character to numeric , original r
filtered_spotify_data$streams <- as.numeric(filtered_spotify_data$streams)

# 1. The mean of all streams in the dataset
mean_streams <- filtered_spotify_data %>%
  summarise(mean_streams = mean(streams, na.rm = TRUE))

print(mean_streams)

# 2. The mean of streams for each month
month_names <- month.name

mean_streams_by_month <- filtered_spotify_data %>%
  group_by(released_month) %>%
  summarise(mean_streams = mean(streams, na.rm = TRUE)) %>%
  mutate(released_month = month_names[as.numeric(released_month)])

print(mean_streams_by_month)

# 3. Transmute mutate example
spotify_data_millions <- filtered_spotify_data %>%
  mutate(streams_in_millions = streams / 1000000) %>%
  transmute(track_name, artist.s._name, released_year, streams_in_millions)
head(spotify_data_millions)





 
```
